version: '3'

services:

  frontend:
    build: ./frontend_react/.
    volumes:
      - frontend:/app/build
    depends_on:
      - db

  nginx:
    image: nginx:1.19.3
    ports:
      - "3000:3000"
    volumes:
      - ./skymarket/django_static/:/usr/share/nginx/html/django_static/
      - ./skymarket/django_media/:/usr/share/nginx/html/django_media/
      - ./market_postgres/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/usr/share/nginx/html/
    restart: always
    depends_on:
      - db
      - frontend

  db:
    image: postgres
    environment:
      - PGUSER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    environment:
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
    build: .
    tty: true
    command: bash -c "python skymarket/manage.py migrate && python skymarket/manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  frontend: